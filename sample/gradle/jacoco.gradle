apply plugin: 'jacoco'

def coverageExclusions = [
        'com/thoughtworks/inspac/integration/sample/common/config/**',
        'com/thoughtworks/inspac/integration/sample/model/property/**',
        'com/thoughtworks/inspac/integration/sample/advice/**',
        'com/thoughtworks/inspac/integration/sample/controller/**',
        'com/thoughtworks/inspac/integration/sample/InspacIntegrationSample.kt',
]

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'BRANCH'
                minimum = 0.0
                value = 'COVEREDRATIO'
            }
        }
        rule {
            limit {
                counter = 'INSTRUCTION'
                minimum = 0.3
                value = 'COVEREDRATIO'
            }
        }
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect({
            fileTree(dir: it, exclude: coverageExclusions)
        }))
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect({
            fileTree(dir: it, exclude: coverageExclusions)
        }))
    }
}

check.dependsOn jacocoTestCoverageVerification

test.finalizedBy jacocoTestReport
